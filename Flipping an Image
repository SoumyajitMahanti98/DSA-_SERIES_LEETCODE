// class Solution {
//     public int[][] flipAndInvertImage(int[][] image) {
//         int n = image.length;
//         for(int i=0;i<n;i++){
//             int left=0;
//             int right=image[i].length-1;
//              while (left <= right) {
//                 // Swap elements
//                 int temp = image[i][left];
//                 image[i][left] = image[i][right];
//                 image[i][right] = temp;
                
//                 left++;
//                 right--;
//         }
//     }
// }
class Solution {
    public int[][] flipAndInvertImage(int[][] image) {
        int n = image.length;
        for (int i = 0; i < n; i++) {
            int left = 0;
            int right = image[i].length - 1;
            while (left <= right) {
                // Swap elements and invert them
                if (left == right) {
                    // If left and right are the same, invert the element
                    image[i][left] ^= 1; // Invert
                } else {
                    // Swap and invert both elements
                    int temp = image[i][left];
                    image[i][left] = image[i][right] ^ 1; // Invert right before assigning
                    image[i][right] = temp ^ 1; // Invert left before assigning
                }
                left++;
                right--;
            }
        }
        return image;
    }
}
